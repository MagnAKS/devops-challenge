name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      
      - name: Install Trivy
        run: |
          wget https://github.com/aquasecurity/trivy/releases/latest/download/trivy_0.18.3_Linux-64bit.tar.gz
          tar zxvf trivy_0.18.3_Linux-64bit.tar.gz
          sudo mv trivy /usr/local/bin/
        shell: bash

      - name: Scan Docker Image
        run: trivy image --exit-code 0 --severity HIGH,CRITICAL ${{ YOUR_ECR_URL }}/my-app:latest

      - name: Login to AWS ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ YOUR_ECR_URL }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build Docker Image
        run: docker build -t BlogApp .

      - name: Tag Docker Image
        run: docker tag BlogApp:latest ${{ YOUR_ECR_URL }}/BlogApp:latest

      - name: Push Docker Image to ECR
        run: docker push ${{ YOUR_ECR_URL }}/BlogApp:latest

      - name: SSH into EC2 and Deploy
        uses: appleboy/ssh-action@v0.18.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker stop BlogApp || true
            docker rm BlogApp || true
            docker pull ${{ YOUR_ECR_URL }}/BlogApp:latest
            docker run -d -p 80:80 --name BlogApp ${{ YOUR_ECR_URL }}/BlogApp:latest
